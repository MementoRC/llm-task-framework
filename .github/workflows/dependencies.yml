name: Dependencies

on:
  pull_request:
    paths:
      - 'pyproject.toml'
      - 'requirements*.txt'
  schedule:
    # Run daily dependency health check
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  dependency-health:
    name: Dependency Health Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.34.0
        cache: true
        auth-host: conda.anaconda.org
    
    - name: Analyze dependency tree
      run: |
        echo "## Dependency Tree Analysis" >> dependency-report.md
        echo '```' >> dependency-report.md
        pixi run deps-tree >> dependency-report.md
        echo '```' >> dependency-report.md
        echo "" >> dependency-report.md
    
    - name: Check for known vulnerabilities
      run: |
        echo "## Security Vulnerabilities" >> dependency-report.md
        pixi run -e security security-deps >> dependency-report.md || true
        echo "" >> dependency-report.md
        
        echo "## Audit Results" >> dependency-report.md
        pixi run -e security security-audit >> dependency-report.md || true
    
    - name: Check for outdated packages
      run: |
        echo "## Outdated Packages" >> dependency-report.md
        echo '```' >> dependency-report.md
        pixi run deps-list >> dependency-report.md || true
        echo '```' >> dependency-report.md
    
    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-report
        path: dependency-report.md
        retention-days: 30
    
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('dependency-report.md')) {
            const report = fs.readFileSync('dependency-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Dependency Health Report\n\n${report}`
            });
          }

  dependency-update-check:
    name: Dependency Update Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout base
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.base.sha }}
        path: base
    
    - name: Checkout head
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        path: head
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Compare dependencies
      run: |
        cd base
        python -c "
        import tomllib
        with open('pyproject.toml', 'rb') as f:
            base_deps = tomllib.load(f)['project']['dependencies']
        print('BASE_DEPS=' + ';'.join(sorted(base_deps)))
        " >> $GITHUB_ENV
        
        cd ../head
        python -c "
        import tomllib
        with open('pyproject.toml', 'rb') as f:
            head_deps = tomllib.load(f)['project']['dependencies']
        print('HEAD_DEPS=' + ';'.join(sorted(head_deps)))
        " >> $GITHUB_ENV
    
    - name: Generate dependency diff
      run: |
        echo "## Dependency Changes" > dep-changes.md
        echo "" >> dep-changes.md
        
        # Simple diff check (could be enhanced with proper parsing)
        if [ "$BASE_DEPS" != "$HEAD_DEPS" ]; then
          echo "### Dependencies Modified" >> dep-changes.md
          echo "Please review dependency changes carefully." >> dep-changes.md
          echo "" >> dep-changes.md
          echo "**Security Review Required:** ✅" >> dep-changes.md
        else
          echo "No dependency changes detected." >> dep-changes.md
        fi
    
    - name: Comment dependency changes
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const changes = fs.readFileSync('dep-changes.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: changes
          });

  license-compatibility:
    name: License Compatibility Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install license checker
      run: |
        pip install hatch
        hatch run pip install pip-licenses licensecheck
    
    - name: Check license compatibility
      run: |
        echo "## License Compatibility Report" > license-report.md
        echo "" >> license-report.md
        
        echo "### Project License: MIT" >> license-report.md
        echo "" >> license-report.md
        
        echo "### Dependency Licenses" >> license-report.md
        echo '```' >> license-report.md
        hatch run pip-licenses --format=plain-vertical >> license-report.md
        echo '```' >> license-report.md
        
        # Check for GPL licenses (incompatible with MIT in some contexts)
        echo "" >> license-report.md
        echo "### License Compatibility Analysis" >> license-report.md
        GPL_COUNT=$(hatch run pip-licenses --format=csv | grep -i "gpl" | wc -l || echo "0")
        COPYLEFT_COUNT=$(hatch run pip-licenses --format=csv | grep -iE "(gpl|agpl|lgpl)" | wc -l || echo "0")
        
        if [ "$COPYLEFT_COUNT" -gt 0 ]; then
          echo "⚠️ **Warning**: Found $COPYLEFT_COUNT copyleft licenses that may require review" >> license-report.md
        else
          echo "✅ **Good**: No problematic copyleft licenses detected" >> license-report.md
        fi
    
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: license-report.md
        retention-days: 30